DEFINE_ACES_PARAM(IS_PARAMETRIC_ACES_TRANSFORM: 0)

/**
 * Leica L-Log to ACES AP0 conversion.
 * Goes from L-Log and BT2020 gamut
 * to scene linear, ACES AP0 gamut.
 *
 * This can be used as an IDT in Resolve.
 */

__DEVICE__ float llog_to_linear(float t) {
    const float a = 8;
    const float b = 0.09;
    const float c = 0.27;
    const float d = 1.3;
    const float e = 0.0115;
    const float f = 0.6;
    const float cut1 = 0.006;
    const float cut2 = 0.1380;

    float out;
    if (t >= cut2) {
        out = ((_exp10f((t - f) / c) - e) / d);
    } else {
        out = ((t - b) / a);
    }
    return out;
}

// Used values calculated from http://color.support/colorspacecalculator.html
// source color space BT 2020 and Output ACES AP0, with Bradford chromatic adaptation.
__CONSTANT__ float matrix[9] = {
     0.679086f, 0.157701f, 0.163213f,
     0.046002f, 0.859055f, 0.094943f,
    -0.000574f, 0.028468f, 0.972106f,
};

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
    float r = llog_to_linear(p_R);
    float g = llog_to_linear(p_G);
    float b = llog_to_linear(p_B);

    float r2 = ( matrix[0] * r) + ( matrix[1] * g) + ( matrix[2] * b);
    float g2 = ( matrix[3] * r) + ( matrix[4] * g) + ( matrix[5] * b);
    float b2 = ( matrix[6] * r) + ( matrix[7] * g) + ( matrix[8] * b);

    float3 res = to_float3(r2, g2, b2);
    return res;
}